# -*- coding: utf-8 -*-
"""Netflix Data: Cleaning, Analysis and Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cJMsKh3EBmS3pd90JTVFJ7wVixqT0cIq

#Step 1: Import Required Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

"""#Step 2: Load the dfset"""

from google.colab import files

# Upload CSV file
uploaded = files.upload()

# Read the CSV file into a DataFrame
df = pd.read_csv('netflix1.csv')

"""# New Section"""

df.head()

"""#Step 3: Data Cleaning
Identify and handle missing data, correct data types, and drop duplicates.
"""

print(df.isnull().sum())

df['date_added'] = pd.to_datetime(df['date_added'])

print(df.dtypes)

df.head()

"""#Step 4: Exploratory Data Analysis (EDA)"""

# Count the number of Movies and TV Shows
type_counts = df['type'].value_counts()
print(type_counts)

# Plot the distribution
plt.figure(figsize=(4, 3))
sns.barplot(x=type_counts.index, y=type_counts.values,
palette='Set2')
plt.title('Distribution of Content by Type')
plt.xlabel('Type')
plt.ylabel('Count')
plt.show()

"""#2. Most Common Genres

"""

# Split the 'listed_in' column and count genres
df['genres'] = df['listed_in'].apply(lambda x: x.split(','))
all_genres = sum(df['genres'], [])
genre_counts = pd.Series(all_genres).value_counts().head(10)
print(genre_counts)

# Plot the most common genres
plt.figure(figsize=(5, 3))
sns.barplot(x=genre_counts.values, y=genre_counts.index,
palette='Set3')
plt.title('Most Common Genres on Netflix')
plt.xlabel('Count')
plt.ylabel('Genre')
plt.show()

"""#3. Content Added Over Time

"""

# Extract year and month from 'date_added'
df['year_added'] = df['date_added'].dt.year
df['month_added'] = df['date_added'].dt.month

# Plot content added over the years
plt.figure(figsize=(8, 6))
sns.countplot(x='year_added', data=df, palette='coolwarm')
plt.title('Content Added Over Time')
plt.xlabel('Year')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

"""#4. Top 10 Directors with the Most Titles"""

# Count titles by director
top_directors = df['director'].value_counts().head(10)
print(top_directors)

# Plot top directors
plt.figure(figsize=(5, 3))
sns.barplot(x=top_directors.values, y=top_directors.index,
palette='Blues_d')
plt.title('Top 10 Directors with the Most Titles')
plt.xlabel('Number of Titles')
plt.ylabel('Director')
plt.show()

"""#5. Word Cloud of Movie Titles

"""

# Generate word cloud
movie_titles = df[df['type'] == 'Movie']['title']
wordcloud = WordCloud(width=800, height=400,
background_color='black').generate(' '.join(movie_titles))

# Plot word cloud
plt.figure(figsize=(6, 4))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.show()

"""#Step 6: Next Steps
1. Feature Engineering: Create new features, such as counting the number of
genres per movie or extracting the duration in minutes.
2. Machine Learning: Use the cleaned and processed data to build models for
recommendations or trend predictions.
3. Advanced Visualization: Use interactive plots or dashboards for more detailed
analysis.

#Content distribution on Netflix.
"""

freq=df['type'].value_counts()
fig, axes=plt.subplots(1,2, figsize=(6, 3))
sns.countplot(df, x=df['type'], ax=axes[0])
plt.pie(freq, labels=['Movie', 'TV Show'], autopct='%.0f%%')
plt.suptitle('Total Content on Netflix', fontsize=20)

"""#Visual representation of rating frequency of movies and TV Shows on Netflix.

"""

df['rating'].value_counts()

ratings=df['rating'].value_counts().reset_index().sort_values(by='count',
ascending=False)
plt.bar(ratings['rating'], ratings['count'])
plt.xticks(rotation=45, ha='right')
plt.xlabel("Rating Types")
plt.ylabel("Rating Frequency")
plt.suptitle('Rating on Netflix', fontsize=20)

"""#Rating type on Netflix"""

plt.pie(ratings['count'][:8], labels=ratings['rating'][:8], autopct='%.0f%%')
plt.suptitle('Rating on Netflix', fontsize=20)

"""#Top 10 countries with most content on Netflix"""

top_ten_countries=df['country'].value_counts().reset_index().sort_values(by='count', ascending=False)[:10]
plt.figure(figsize=(7, 4))
plt.bar(top_ten_countries['country'], top_ten_countries['count'])
plt.xticks(rotation=45, ha='right')
plt.xlabel("Country")
plt.ylabel("Frequency")
plt.suptitle("Top 10 countries with most content on Netflix")
plt.show()

"""#Monthly releases of Movies and TV shows on Netflix

"""

df.head(2)

df.info()

df['year']=df['date_added'].dt.year
df['month']=df['date_added'].dt.month
df['day']=df['date_added'].dt.day

monthly_movie_release=df[df['type']=='Movie']['month'].value_counts().sort_index()
monthly_series_release=df[df['type']=='TV Show']['month'].value_counts().sort_index()
plt.plot(monthly_movie_release.index, monthly_movie_release.values, label='Movies')
plt.plot(monthly_series_release.index, monthly_series_release.values,label='TVShow')
plt.xlabel("Months")
plt.ylabel("Frequency of releases")
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul','Aug','Sep', 'Oct', 'Nov', 'Dec'])
plt.legend()
plt.grid(True)
plt.suptitle("Monthly releases of Movies and TV shows on Netflix")
plt.show()

"""#Yearly releases of Movies and TV Shows on Netflix"""

yearly_movie_releases=df[df['type']=='Movie']['year'].value_counts().sort_index()
yearly_series_releases=df[df['type']=='TV Show']['year'].value_counts().sort_index()
plt.plot(yearly_movie_releases.index, yearly_movie_releases.values, label='Movies')
plt.plot(yearly_series_releases.index, yearly_series_releases.values, label='TV Shows')
plt.xlabel("Years")
plt.ylabel("Frequency of releases")
plt.grid(True)
plt.suptitle("Yearly releases of Movies and TV Shows on Netflix")
plt.legend()

"""#Top 10 popular movie genres"""

popular_movie_genre=df[df['type']=='Movie'].groupby("listed_in").size().sort_values(ascending=False)[:10]
popular_series_genre=df[df['type']=='TVShow'].groupby("listed_in").size().sort_values(ascending=False)[:10]
plt.bar(popular_movie_genre.index, popular_movie_genre.values)
plt.xticks(rotation=45, ha='right')
plt.xlabel("Genres")
plt.ylabel("Movies Frequency")
plt.suptitle("Top 10 popular genres for movies on Netflix")
plt.show()

"""#Top 15 directors across Netflix with hoigh frequency of movies and shows."""

directors=df['director'].value_counts().reset_index().sort_values(by='count',ascending=False)[1:15]
plt.bar(directors['director'], directors['count'])
plt.xticks(rotation=45, ha='right')

"""#Conclusion

In the Netflix Data: Cleaning, Analysis, and Visualization project, the conclusions typically revolve around the key insights derived from the dataset, as well as the results of the analysis and visualization.

1. Content Diversity and Trends:
Genres and Categories: The analysis often reveals which genres are most prominent on Netflix, and how these genres have evolved over time.
Content Release Patterns: You might discover specific trends in content releases, such as which years had the highest number of releases or which months Netflix tends to release more content.
2. Content Ratings and Audience Preferences:
Ratings Distribution: Insights on which types of content receive the highest ratings from viewers and whether ratings are skewed towards certain genres or release years.
Content Length: You could analyze the length of movies and series to see if there’s a preference for shorter or longer content.
3. International Reach:
Regional Popularity: The analysis can provide information on which regions contribute the most content, indicating Netflix’s global reach and its focus on certain countries.
4. Key Contributors:
Top Directors/Actors: You can identify the most frequent collaborators or those with the most appearances in Netflix’s content library, providing insight into star power and audience draws.
5. Recommendations for Further Analysis:
Machine Learning Potential: Based on the cleaned dataset and exploratory data analysis, you could set up potential machine learning tasks such as content-based recommendation systems or predictive models to estimate future viewership trends based on historical data.
Overall, the project typically concludes by highlighting the importance of data cleaning and visualization in deriving actionable insights from raw datasets. These insights can further support decision-making processes for businesses in the entertainment industry, like understanding audience preferences, content planning, and regional expansion strategies.
"""

